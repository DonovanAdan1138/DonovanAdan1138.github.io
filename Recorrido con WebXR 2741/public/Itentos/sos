<!DOCTYPE html> 
<html lang="en"> 
<head> 
<meta charset="UTF-8" /> 
     <title>Archivo base
        
     </title>
     <style>
     </style>
</head>
<body>
<canvas id="myCanvas">
    <!--El elemento HTML canvas se puede utilizar para dibujar gráficos a través de 
        secuencias de comandos (por lo general JavaScript ).-->
</canvas>
<script type="importmap"> 
    {
        "imports":{
            "three": "./js/three.module.js",
            "three/OrbitControls": "./js/OrbitControls.js" 
        }
}
</script>
<script type="module"> 
    //👉🏽 Mandar llamar a la librería
    import * as THREE from 'three'; 
    import {OrbitControls} from 'three/OrbitControls';
    import{RoundedBoxGeometry}from "./js/RoundedBoxGeometry.js"; 
    console.log(OrbitControls);

    //👉🏽 Renderer - Realiza una conexión entre el código y el canvas
    var renderer = new THREE.WebGLRenderer({canvas: document.getElementById('myCanvas'),antialias: true});
    renderer.setPixelRatio(window.decivePixelRatio);
    renderer.setSize(window.innerWidth, window.innerHeight);
    renderer.setClearColor(0x85929E);

    //🎬 Creando nueva escena 
    var scene = new THREE.Scene();

    //🎥 Agregar una cámara de perspectiva
    var camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.1, 5000);
    scene.add(camera);

    //👉🏽Settings de la cámara
    camera.position.set(0, 4, 25);

    //👉🏽Añadiendo los OrbitControls
    var controls = new OrbitControls(camera, renderer.domElement);
    controls.enableDamping = true;
    controls.dampingFactor = 0.05;

    //✏️GridHelper
    //const gridHelper = new THREE.GridHelper(50,10);
    //scene.add (gridHelper);

    //✏️Ejes
    //const axesHelper = new THREE.AxesHelper(50);
    //scene.add (axesHelper);
  

    // 🪄🪄 SECCIÓN DE CÓDIGO 🪄🪄
    
    //luz1
    var light=new THREE.AmbientLight(0xffffff,0.5)
    light.position.set(50,50,50);
    scene.add(light);
//luz2
var light1=new THREE.DirectionalLight(0xffffff,1);
    light1.position.set(50,50,50);
    scene.add(light1);
    var geometry01= new THREE.BoxGeometry(50,0.5,50,12,12,12);
//luz3
var light3=new THREE.HemisphereLight(0xffffff,0x000000,0.2);
light3.position.set(0,40,0);
scene.add(light3);

var material01= new THREE.MeshLambertMaterial({color:0x6c0364});
var mesh01= new THREE.Mesh(geometry01,material01);
mesh01.receiveShadow=true;
scene.add(mesh01);
mesh01.position.set(0,-5,0);


//spotligth
var light07=new THREE.SpotLight(0xb71608,5,25,0.36,0.5,0);
scene.add(light07);
var helper7=new THREE.SpotLightHelper(light07);
scene.add(helper7);
light07.target.position.set(0,0,0);
scene.add(light07.target);
light07.position.set(0,20,0);
//sombra

renderer.shadowMap.enabled=true;
renderer.shadowMap.type=THREE.PCFShadowMap;
//sombra del spot
light07.castShadow=true;
light07.shadowbias=0.0001;
light07.shadow.mapSize.width=1024;
light07.shadow.mapSize.height=1024;
scene.add(light07);


//spot2
var light08=new THREE.SpotLight(0xE1E80C,1,25,0.36,0.5,0);
scene.add(light08);
var helper8=new THREE.SpotLightHelper(light08);
scene.add(helper8);
light08.target.position.set(20,2,0);
scene.add(light08.target);
light08.position.set(20,20,0);
//sombra del spot
light08.castShadow=true;
light08.shadowbias=0.0001;
light08.shadow.mapSize.width=1024;
light08.shadow.mapSize.height=1024;
scene.add(light08);


//spot3
var light09= new THREE.SpotLight(0x09CE81,5,25,0.36,0.8,0);
scene.add(light09);
var helper9=new THREE.SpotLightHelper(light09);
scene.add(helper9);
light09.target.position.set(-20,0,0);
scene.add(light09.target);
light09.position.set(-20,20,0);
//sombra del spot
light09.castShadow=true;
light09.shadowbias=0.0001;
light09.shadow.mapSize.width=1024;
light09.shadow.mapSize.height=1024;
scene.add(light07);




   //flor1
   var petalo=new RoundedBoxGeometry(2,10,2,15,0.5);
   var material=new THREE.MeshLambertMaterial({color:0x004635,wireframe:true});
   var mesh02=new THREE.Mesh(petalo,material);
   mesh02.castShadow=true;
   scene.add(mesh02);

   var petalo=new RoundedBoxGeometry(2,10,2,15,0.5);
   var mesh03=new THREE.Mesh(petalo,material);
   mesh03.castShadow=true;

   scene.add(mesh03);

   mesh03.rotation.set(0,0,0.785);

   var petalo=new RoundedBoxGeometry(2,10,2,15,0.5);
   var mesh04=new THREE.Mesh(petalo,material);
   mesh04.castShadow=true;
   scene.add(mesh04);
   mesh04.rotation.set(0,0,-0.785);

   var petalo=new RoundedBoxGeometry(2,10,2,15,0.5);
   var mesh05=new THREE.Mesh(petalo,material);
   mesh05.castShadow=true;
   scene.add(mesh05);
   mesh05.rotation.set(0,0,8);
   //agrupar 
   var flor1=new THREE.Group();
   flor1.add(mesh02,mesh03,mesh04,mesh05);
   scene.add(flor1);
   //flor2
   var flor2=flor1.clone();
   scene.add(flor2);
   flor2.position.set(20,0,0);
   //flor3

 var flor3=flor1.clone();
   scene.add(flor3);
   flor3.position.set(-20,0,0);
      //🎰🎰Rendering y animación
      requestAnimationFrame(render);
      function render() {

      //🪄🪄 Animación
flor1.rotation.y +=0.01;
flor2.rotation.x +=0.01;
flor3.rotation.z +=0.1;


      controls.update();

      //Llamado para renderizar y volver a llamar a la misma función (render)
      renderer.render(scene, camera);
      requestAnimationFrame(render);
      }
</script>
</body>
</html>